version: "3.8"

services:
  api-gateway:
    image: nginx:latest
    container_name: api-gateway
    ports:
      - "8080:8080"
    volumes:
      - ./api-gateway/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - auth-service
      - userprofile-service
      - payments-service
    networks:
      - digitalwallet_network

  auth-service:
    build:
      context: ./services/auth-service
    command: npm run dev
    ports:
      - "4000:4000"
    env_file:
      - ./services/auth-service/.env
    volumes:
      - ./services/auth-service:/usr/src/app
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - digitalwallet_network

  userprofile-service:
    build:
      context: ./services/userprofile-service
    command: npm run dev
    ports:
      - "5001:5001"
    env_file:
      - ./services/userprofile-service/.env
    volumes:
      - ./services/userprofile-service:/usr/src/app
    depends_on:
      mongo:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - digitalwallet_network

  payments-service:
    build:
      context: ./services/payments-service
    command: sh -c "npx prisma migrate deploy && npm run dev"
    ports:
      - "5002:5002"
    env_file:
      - ./services/payments-service/.env
    volumes:
      - ./services/payments-service:/usr/src/app
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - digitalwallet_network

  postgres:
    image: postgres:13
    container_name: digitalwallet-postgres
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: rootpassword
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./scripts/init-db.sh:/docker-entrypoint-initdb.d/init-db.sh
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U root"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - digitalwallet_network

  mongo:
    image: mongo
    container_name: mongo
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.runCommand({ ping: 1 })"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - digitalwallet_network

  rabbitmq:
    image: "rabbitmq:3-management"
    container_name: rabbitmq
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - digitalwallet_network

networks:
  digitalwallet_network:
    driver: bridge

volumes:
  pgdata:
    driver: local
  mongo_data:
    driver: local
  rabbitmq_data:
    driver: local
